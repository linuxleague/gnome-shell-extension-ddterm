name: check

concurrency: ${{ github.workflow }}/${{ github.ref }}

on:
  - push
  - pull_request

jobs:
  check_skip:
    runs-on: ubuntu-latest

    outputs:
      should_skip: ${{ steps.check.outputs.should_skip }}

    steps:
      - id: check
        uses: fkirc/skip-duplicate-actions@v4

  lint:
    needs: check_skip
    if: ${{ needs.check_skip.outputs.should_skip != 'true' }}

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
    - run: npm ci
    - run: make lint

  schemas:
    needs: check_skip
    if: ${{ needs.check_skip.outputs.should_skip != 'true' }}

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - run: make schemas

  locales:
    needs: check_skip
    if: ${{ needs.check_skip.outputs.should_skip != 'true' }}

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - run: echo "::add-matcher::.github/problem-matchers/gettext.json"
    - run: make locales

  gtk-builder-validate:
    needs: check_skip
    if: ${{ needs.check_skip.outputs.should_skip != 'true' }}

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - run: xvfb-run make gtk-builder-validate

  msgcmp:
    needs: check_skip
    if: ${{ needs.check_skip.outputs.should_skip != 'true' }}

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - run: echo "::add-matcher::.github/problem-matchers/gettext.json"
    - run: make msgcmp

  test:
    needs:
    - lint
    - schemas
    - locales
    - gtk-builder-validate
    - msgcmp
    - check_skip

    if: ${{ needs.check_skip.outputs.should_skip != 'true' }}

    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/ddterm/ci-docker-image:master
      options: --privileged --cgroupns=host --tmpfs /tmp --tmpfs /run

    strategy:
      fail-fast: false
      matrix:
        image:
          - 'fedora-35'
          - 'fedora-36'
          - 'debian-11'
          - 'ubuntu-20.04'
          - 'ubuntu-22.04'
        session:
          - 'TestXSession'
          - 'TestWayland'
          - 'TestWaylandHighDpi'
          - 'TestWaylandDualMonitor'

    env:
      IMAGE: ghcr.io/ddterm/gnome-shell-pod/${{ matrix.image }}:master
      PY_COLORS: 1
      TOX_TESTENV_PASSENV: PY_COLORS GITHUB_ACTIONS
      TOXENV: py3-ghactions

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3

    - run: git config --global --replace-all safe.directory "$GITHUB_WORKSPACE"

    - uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{ github.repository_owner }}

    - run: npm ci

    - run: xvfb-run make test-deps

    - run: tox -vv --notest --sitepackages
      working-directory: test

    - run: for retry in 1 2 3; do podman pull "${{ env.IMAGE }}" && break; done

    - run: tox --sitepackages -- --junitxml=junit.xml --container-image "${{ env.IMAGE }}" -n 2 --screenshot-failing-only -v "test_extension.py::${{ matrix.session }}"
      working-directory: test

    - run: testspace "[${{ matrix.image }}]./test/junit.xml"
      if: always()

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.session }}-${{ matrix.image }}
        path: |
          test/report.html
          test/junit.xml
          test/assets
      if: always()
