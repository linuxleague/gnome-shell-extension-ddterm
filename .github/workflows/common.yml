concurrency: ${{ github.workflow }}/${{ github.ref }}

on:
  workflow_dispatch:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - id: checkout
      uses: actions/checkout@v3

    - uses: actions/setup-node@v3

    - run: npm ci

    - run: make lint

    - run: echo "::add-matcher::.github/problem-matchers/generic.json"
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

    - run: make schemas
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

    - run: make locales
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

    - run: xvfb-run make test-deps
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

    - run: xvfb-run make gtk-builder-validate
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

    - run: make msgcmp
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

  pack:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
    - run: echo "::add-matcher::.github/problem-matchers/generic.json"
    - run: npm ci
    - run: xvfb-run make pack
    - id: upload
      uses: actions/upload-artifact@v3
      with:
        name: pack
        path: "*.shell-extension.zip"
        if-no-files-found: error

  test:
    needs:
    - lint
    - pack

    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/ddterm/ci-docker-image:master
      options: --privileged --cgroupns=host --tmpfs /tmp --tmpfs /run

    strategy:
      fail-fast: false
      matrix:
        container_name:
          - 'fedora-35'
          - 'fedora-36'
          - 'debian-11'
          - 'ubuntu-20.04'
          - 'ubuntu-22.04'

    env:
      PY_COLORS: 1
      TOXENV: py3-ghactions
      PIP_DISABLE_PIP_VERSION_CHECK: 1
      TOX_TESTENV_PASSENV: >-
        PY_COLORS
        GITHUB_ACTIONS
        PIP_DISABLE_PIP_VERSION_CHECK

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3

    - run: echo "::add-matcher::.github/problem-matchers/generic.json"

    - run: git config --global --replace-all safe.directory "$GITHUB_WORKSPACE"

    - id: setup_testspace
      uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{ github.repository_owner }}
      continue-on-error: true

    - run: npm ci

    - run: xvfb-run make test-deps

    - run: tox -vv --notest --sitepackages
      working-directory: test

    - run: >-
        for retry in 1 2 3; do
          .tox/$TOXENV/bin/podman-compose pull ${{ matrix.container_name }} && break;
        done
      working-directory: test

    - run: |
        echo "::remove-matcher owner=generic::"
        echo "::remove-matcher owner=generic-nolocation::"

    - run: >-
        tox --sitepackages --
        -n 2
        --junitxml=junit.xml
        --self-contained-html
        --container "${{ matrix.container_name }}"
        --screenshot-failing-only
        -v
      working-directory: test

    - run: testspace --verbose "[${{ matrix.container_name }}]./test/junit.xml" "[${{ matrix.container_name }}]+./test/report.html"
      if: ${{ always() && steps.setup_testspace.outcome == 'success' }}

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.container_name }}
        path: |
          test/report.html
          test/junit.xml
      if: always()
