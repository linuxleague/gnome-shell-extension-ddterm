---
- hosts: all
  vars:
    extension_pack: "{{ query('ansible.builtin.fileglob', '../../*.shell-extension.zip') }}"

  pre_tasks:
    - ansible.builtin.assert:
        that: extension_pack
        fail_msg: Extension package not found. Please run 'make pack'
        quiet: yes

    - ansible.builtin.assert:
        that: extension_pack | length <= 1
        fail_msg: Multiple extension packages found {{ extension_pack | join(', ') }}
        quiet: yes

  handlers:
    - name: Remove temporary directory
      ansible.builtin.file:
        path: "{{ upload_dir.path }}"
        state: absent

  tasks:
    - name: Create temporary directory
      ansible.builtin.tempfile:
        state: directory
      register: upload_dir
      notify: Remove temporary directory

    - name: Upload extension package
      ansible.builtin.copy:
        src: "{{ extension_pack[0] }}"
        dest: "{{ upload_dir.path }}/"
      register: upload_pack

    - name: Install the extension
      ansible.builtin.command: gnome-extensions install -f {{ upload_pack.dest }}

    - name: Enable the extension
      ansible.builtin.command: gsettings set org.gnome.shell enabled-extensions "['ddterm@amezin.github.com']"

    - name: List existing sessions
      ansible.builtin.command: loginctl list-sessions -o json
      register: sessions

    - name: Terminate existing sessions
      ansible.builtin.command: loginctl terminate-session {{ item.session }}
      become: yes
      loop: "{{ sessions.stdout | from_json | selectattr('seat') | selectattr('uid', '==', ansible_facts['real_user_id']) }}"

    - name: Ensure graphical.target is started
      ansible.builtin.systemd:
        name: graphical.target
        state: started
      become: yes
