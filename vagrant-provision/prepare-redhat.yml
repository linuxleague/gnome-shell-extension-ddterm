---
- name: Upgrade packages
  ansible.builtin.dnf:
    name: "*"
    state: latest

- name: Install packages
  ansible.builtin.dnf:
    name:
      - gnome-session-xsession
      - gnome-extensions-app
      - vte291
      - libxslt
      - gtk3-devel
      - gtk4-devel
      - glib2-devel
      - sudo
      - make
      - patch
      - jq
      - unzip
      - git
      - npm
      - gdm
      - xorg-x11-server-Xvfb
      - langpacks-fr
      - PackageKit
      - PackageKit-glib
      - gnome-software
    state: latest

- name: Install spice-vdagent
  ansible.builtin.dnf:
    name:
      - spice-vdagent
    state: latest
  when: ansible_virtualization_type == 'kvm'
  register: spice_vdagent

- name: Remove nomodeset from kernel command line
  ansible.builtin.replace:
    path: /etc/default/grub
    regexp: " nomodeset "
    replace: " "
  register: kernel_cmdline

- name: Update Grub config
  ansible.builtin.command: grub2-mkconfig -o /boot/grub2/grub.cfg
  when: kernel_cmdline.changed

- name: Check if reboot is necessary
  ansible.builtin.command: dnf needs-restarting -r
  register: needs_reboot
  failed_when: needs_reboot.rc > 1
  changed_when: needs_reboot.rc == 1

- name: Reboot
  ansible.builtin.reboot:
  when: needs_reboot.changed or spice_vdagent.changed or kernel_cmdline.changed

- name: Check if systemd services should be restarted
  ansible.builtin.command: dnf needs-restarting -s
  register: needs_service_restart
  changed_when: needs_service_restart.stdout_lines | length > 0
  when: ansible_facts['distribution_version'] is version('33', '>=')

- name: Restart updated systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: restarted
  loop: "{{ needs_service_restart.stdout_lines }}"
  when: needs_service_restart.changed

- name: Set graphical.target as the default
  ansible.builtin.file:
    path: /etc/systemd/system/default.target
    src: /usr/lib/systemd/system/graphical.target
    state: link
